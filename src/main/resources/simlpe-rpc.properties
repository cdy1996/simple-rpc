# 暴露端注解
#服务名称.ip            #默认为registry.ip
#服务名称.protocols     #默认为registry.protocols
#服务名称.port          #默认为registry.port

# 引用端注解
#服务名称.async         #是否异步
#服务名称.protocols     #引用的协议 默认为discovery.protocols
#服务名称.url           #直连地址
#服务名称.timeout       #该服务的超时时间
#服务名称.type          #服务发现中心的唯一id, 默认为discovery.type
#服务名称.cluster       #客户端的集群容错策略  默认为discovery.cluster


# 服务注册和发现通用的序列化协议
#serialize.type=jdk
serialize.type=hession
#serialize.type=pb
#serialize.type=json



#service=服务名称 registry.protocols(如果为多个则会对应注册多个服务名称)+'-'+registry.ip+':'registry.port
#服务名称.tags=tag名称1:tag值1,tag名称2:tag值2

# 服务注册时的元信息
registry.ip=127.0.0.1
#默认协议
registry.protocol=rpc
#默认协议的端口
registry.port=8080
#多协议及端口 暂时没有实现同端口多协议
registry.protocols=http-8080,rpc-10001
# 服务发现的中心
registry.types=simple
#registry.types=nacos-1,zookeeper-1



#client=客户端名称 需要自己指定
#客户端名称.tags=tag名称1:tag值1,tag名称2:tag值2
#iproute.whitelist=
#iproute.blacklist=

#balance=simple         #简单负载均衡器
#rule=round             #轮询规则
#http.maxThread

# 服务发现时使用的协议,支持多种
discovery.protocols=http
# 服务发现是否延时到调用时
discovery.lazy=false
# 服务发现 : 多订阅,在运行时只能选择一个注册中心
#discovery.type=nacos-1
discovery.type=simple
# 服务发现的注册中心配置
discovery.types=simple
#disocvery.types=nacos-1,zookeeper-1
#集群失败策略 failfast failover failcache
discovery.custer=failfast

nacos-1.serverAddr=127.0.0.1:8848
nacos-1.namespaceId=529469ac-0341-4276-a256-14dcf863935c

zookeeper-1.serverAddr=127.0.0.1:2181
zookeeper-1.zkRegistryPath=/registry